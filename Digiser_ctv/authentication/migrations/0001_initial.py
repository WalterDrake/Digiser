# Generated by Django 4.2.11 on 2024-07-30 14:57

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone_no', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True, verbose_name='phone number')),
                ('is_verified', models.BooleanField(default=False, verbose_name='is verified')),
                ('full_name', models.CharField(blank=True, max_length=20, verbose_name='full name')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('address', models.CharField(blank=True, max_length=30, verbose_name='address')),
                ('qualification', models.CharField(blank=True, max_length=20, verbose_name='qualification')),
                ('identification', models.CharField(blank=True, max_length=15, verbose_name='identification')),
                ('identification_address', models.CharField(blank=True, max_length=30, verbose_name='identification address')),
                ('note', models.CharField(blank=True, max_length=50, verbose_name='note')),
                ('account_number', models.CharField(blank=True, max_length=20, verbose_name='account number')),
                ('bank_name', models.CharField(blank=True, max_length=20, verbose_name='bank name')),
                ('branch', models.CharField(blank=True, max_length=20, verbose_name='branch')),
                ('owner', models.CharField(blank=True, max_length=20, verbose_name='owner')),
                ('code_bank', models.CharField(blank=True, max_length=10, verbose_name='code bank')),
                ('code', models.CharField(blank=True, max_length=10, unique=True, verbose_name='code')),
                ('role', models.CharField(blank=True, max_length=10, verbose_name='role')),
                ('status', models.CharField(blank=True, choices=[('AC', 'Working'), ('NA', 'Quit')], max_length=2, verbose_name='status')),
                ('skill', models.CharField(blank=True, choices=[('Civil, Online, A3', 'Civil, Online, A3'), ('Civil, Offline, A3', 'Civil, Offline, A3'), ('Civil, Online, A4', 'Civil, Online, A4'), ('Civil, Offline, A4', 'Civil, Offline, A4'), ('VBHC, Online, A3', 'VBHC, Online, A3'), ('VBHC, Offline, A3', 'VBHC, Offline, A3'), ('VBHC, Online, A4', 'VBHC, Online, A4'), ('VBHC, Offline, A4', 'VBHC, Offline, A4'), ('Merging, Online, A3', 'Merging, Online, A3'), ('Merging, Offline, A3', 'Merging, Offline, A3'), ('Merging, Online, A4', 'Merging, Online, A4'), ('Merging, Offline, A4', 'Merging, Offline, A4'), ('Naming, Online, A3', 'Naming, Online, A3'), ('Naming, Offline, A3', 'Naming, Offline, A3'), ('Naming, Online, A4', 'Naming, Online, A4'), ('Naming, Offline, A4', 'Naming, Offline, A4')], max_length=30, verbose_name='skill')),
                ('style', models.CharField(blank=True, choices=[('AD', 'Admin'), ('CTV', 'CTV'), ('MGR', 'Manager'), ('SP', 'Support')], max_length=3, verbose_name='style')),
                ('updated_time', models.DateTimeField(blank=True, null=True, verbose_name='update time')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('updated_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_by', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
